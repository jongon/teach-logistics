@model Tesis.ViewModels.PeriodViewModel
@{
	ViewBag.Title = "Ordenes";
}
@section Styles{
	@Styles.Render("~/plugins/iCheckStyles")
	@Styles.Render("~/app/Simulations")
}
<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-12">
		<h2>Modelo de Gestión</h2>
		<ol class="breadcrumb">
			@Html.DisplayFor(model => model.CaseStudy.Name)
		</ol>
		<span>
			<strong>Período: </strong>@Html.DisplayFor(model => model.WeekNumber)
		</span>
	</div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
	@Html.Flash()
	<div class="row">
		<div class="col-lg-12">
			<div class="ibox float-e-margins">
				<div class="ibox-content">
					<button class="btn btn-success">Caso de Estudio</button>
					<button class="btn btn-primary">Formulas</button>
					<button class="btn btn-warning">Instrucciones</button>
				</div>
			</div>		
			@using (Html.BeginForm("MakeOrders", "Simulations", FormMethod.Post, new { @class = "", role = "form", id = "form" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })		
				@Html.HiddenFor(model => model.GroupId)				
				for (var i = 0; i < Model.Orders.Count(); i++)
				{
				<div class="ibox float-e-margins">
					<div class="ibox-title">
						<h5>@Html.DisplayFor(modelItem => Model.Orders[i].ProductName)</h5>
					</div>
					<div class="ibox-content">
						<div class="row">
							<div class="col-md-4 b-r">
								@Html.HiddenFor(modelItem => Model.Orders[i].ProductId)
								<dl class="dl-horizontal">
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].ProductNumber)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].ProductNumber)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].ProductPrice)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].ProductPrice)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].ReceivedOrders)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].ReceivedOrders)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].InitialStock)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].InitialStock)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].Demand)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].Demand)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].Sells)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].Sells)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].FinalStock)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].FinalStock)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].FinalStockCost)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].FinalStockCost)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].UnsatisfiedDemand)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].UnsatisfiedDemand)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].UnsatisfiedDemandCost)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].UnsatisfiedDemandCost)
									</dd>
								</dl>
							</div>
							<div class="col-md-8 form-horizontal">
								<div class="form-group">
									@Html.LabelFor(modelItem => Model.Orders[i].Quantity, new { @class = "control-label col-sm-3" })
									<div class="col-sm-9">
										@Html.EditorFor(modelItem => Model.Orders[i].Quantity, new { htmlAttributes = new { @placeholder = "Cantidad", @Value = "" } })
										@Html.ValidationMessageFor(modelItem => Model.Orders[i].Quantity, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(modelItem => Model.Orders[i].OrderMethod, new { @class = "control-label col-sm-3" })
									<div class="col-sm-9">
										@foreach (var option in (SelectList)Model.Orders[i].OrderMethod)
										{
											<div class="radio i-checks">
												<label>
													@Html.RadioButtonFor(modelItem => Model.Orders[i].OrderMethodOption, option.Value)
													<i></i>@option.Text
												</label>
											</div>
										}
										@Html.ValidationMessageFor(modelItem => Model.Orders[i].OrderMethod, "", new { @class = "text-danger" })
									</div>
								</div>
								<p>
								Ordenes serán entregadas en el período:
								<span id="weekDelivery" class="text-primary"><strong></strong></span>
								</p>
								<button class="btn btn-info">Costos y tiempos</button>
							</div>
						</div>
					</div>
				</div>
				}
				<div class="row-wrapper wrapper wrapper-content">
					<div class="row">
						<div class="col-lg-12">
							<div class="ibox-content">
								<div class="form-group">
									<div class="col-md-12">
										<input type="submit" value="Ordenar" class="btn btn-primary" />
									</div>
								</div>
								<br />			
							</div>
						</div>
					</div>
				</div>
			}				
		</div>
	</div>
</div>
@*@{ Html.RenderPartial("_OrderInstructions"); }*@
@{ Html.RenderPartial("_CaseStudyInformation", Model.CaseStudy); }
@{ Html.RenderPartial("_CaseStudyInstructions"); }
@*@{ Html.RenderPartial("_OrderSteps"); }
@{ Html.RenderPartial("_Formulas"); }*@
@section Scripts {
	<script>
		var periodNumber = @Model.WeekNumber;
	</script>
	@Scripts.Render("~/plugins/iCheck")
	@Scripts.Render("~/bundles/Simulations/orders")
}