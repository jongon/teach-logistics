@model Tesis.ViewModels.ConfirmationViewModel
@{
	Layout = "~/Views/Shared/_LoginLayout.cshtml";
	ViewBag.Title = "Confirmación";
}
<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-4">
		<h2>Confirmar</h2>
	</div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
	@Html.Flash()
	<div class="row">
		<div class="col-lg-12">
			<div class="ibox float-e-margins">
				<div class="ibox-title">
					<h5>Confirmar Usuario</h5>
				</div>
				<div class="ibox-content">
					@using (Html.BeginForm("Confirmation", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
					{
						@Html.AntiForgeryToken()
						@Html.HiddenFor(model => model.Id)
						@Html.Hidden("returnUrl", (string)ViewBag.returnUrl)
						@Html.Hidden("rememberMe", (bool)ViewBag.rememberMe)
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						<div class="form-group">
							@Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>
						<div class="form-group">
							@Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>
						<div class="form-group">
							@Html.LabelFor(m => m.IdCard, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.TextBoxFor(m => m.IdCard, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.IdCard, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>
						<div class="form-group">
							@Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>
						<div class="form-group">
							@Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.PasswordFor(m => m.Password, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>
						<div class="form-group">
							@Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>
						<div class="form-group">
							<div class="col-md-offset-2 col-md-10">
								<input type="submit" class="btn btn-primary" value="Confirmar" />
							</div>
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
