@model Tesis.ViewModels.EditUserViewModel
@{
	ViewBag.Title = "Editar";
}
<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-4">
		<h2>Editar</h2>
		<ol class="breadcrumb">
			<li>
				@Html.ActionLink("Índice", "Index")
			</li>
			<li class="active">
				<strong>Editar</strong>
			</li>
		</ol>
	</div>
	<div class="col-sm-8">
		<div class="title-action">
			@Html.ActionLink("Volver al índice", "Index", null, new { @class = "btn btn-primary" })
		</div>
	</div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
	@Html.Flash()
	<div class="row">
		<div class="col-lg-12">
			<div class="ibox float-e-margins">
				<div class="ibox-title">
					<h5>Editar Usuario</h5>
				</div>
				<div class="ibox-content">
					@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
					{
						@Html.AntiForgeryToken()
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						@Html.HiddenFor(model => model.Id)
						if (ViewBag.Roles.Contains("Estudiante"))
						{
							<div class="form-group">
								@Html.LabelFor(model => model.SemesterId, new { @class = "control-label col-md-2" })
								<div class="col-md-10">
								@(Html.Kendo().DropDownListFor(model => model.SemesterId)
								.Name("SemesterId")
								.OptionLabel("Seleccione el semestre...")
								.DataTextField("Description")
								.DataValueField("Id")
								.Value(Model.SemesterId.ToString())
								.DataSource(source =>
								{
									source.Read(read =>
									{
										read.Action("IndexJson", "Semesters");
									});
								})
									)
									@Html.ValidationMessageFor(model => model.SemesterId, "", new { @class = "text-danger" })
								</div>
							</div>
							<div class="hr-line-dashed"></div>

							<div class="form-group">
								@Html.LabelFor(model => model.SectionId, new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@(Html.Kendo().DropDownListFor(model => model.SectionId)
										.Name("SectionId")
										.OptionLabel("Seleccione la sección...")
										.DataTextField("Number")
										.DataValueField("Id")
										.Value(Model.SectionId.ToString())
										.DataSource(source =>
										{
											source.Read(read =>
											{
												read.Action("GetSectionsBySemester", "Sections")
																.Data("filterSections");
											})
											.ServerFiltering(true);
										})
										.Enable(false)
										.AutoBind(false)
										.CascadeFrom("SemesterId")
									)
									@Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
								</div>
							</div>
							<div class="hr-line-dashed"></div>
																												}
						<div class="form-group">
							@Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.Email)
								@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							@Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.FirstName)
								@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							@Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.LastName)
								@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							@Html.LabelFor(model => model.IdCard, new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.IdCard)
								@Html.ValidationMessageFor(model => model.IdCard, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							@Html.LabelFor(model => model.Password, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.PasswordFor(model => model.Password, new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							@Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })
							<div class="col-md-10">
								@Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
								@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							@Html.LabelFor(model => model.EmailConfirmed, new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.EditorFor(model => model.EmailConfirmed)
								@Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="hr-line-dashed"></div>

						<div class="form-group">
							<div class="col-md-offset-2 col-md-10">
								<input type="submit" value="Editar" class="btn btn-primary" />
								@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-info" })
							</div>
						</div>
															}
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	@Scripts.Render("~/bundles/Account/edit")
}