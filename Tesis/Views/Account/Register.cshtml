@model Tesis.ViewModels.RegisterViewModel
@{
	ViewBag.Title = "Registrar";
}

<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-4">
		<h2>Crear</h2>
		<ol class="breadcrumb">
			<li>
				@Html.ActionLink("Índice", "Index")
			</li>
			<li class="active">
				<strong>Crear</strong>
			</li>
		</ol>
	</div>
	<div class="col-sm-8">
		<div class="title-action">
			@Html.ActionLink("Volver al índice", "Index", null, new { @class = "btn btn-primary" })
		</div>
	</div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
	@Html.Flash()
	<div class="row">
		<div class="col-lg-12">
			<div class="ibox float-e-margins">
				<div class="ibox-title">
					<h5>Registrar Usuario/Estudiante</h5>
				</div>
				<div class="ibox-content">
				@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
				{
					@Html.AntiForgeryToken()
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="form-group">
						@Html.Label("Semestre", new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@(Html.Kendo().DropDownListFor(model => model.SemesterId)
																		.Name("SemesterId")
																		.OptionLabel("Seleccione el semestre...")
																		.DataTextField("Description")
																		.DataValueField("Id")
																		.DataSource(source =>
																		{
																			source.Read(read =>
																			{
																				read.Action("IndexJson", "Semesters");
																			});
																		})
																		.Value((ViewBag.SemesterId != null) ? ViewBag.SemesterId : "")																		
							)
							@Html.ValidationMessageFor(model => model.SemesterId, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="hr-line-dashed"></div>

					<div class="form-group">
						@Html.LabelFor(model => model.SectionId, new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@(Html.Kendo().DropDownListFor(model => model.SectionId)
																				.Name("SectionId")
																				.OptionLabel("Seleccione la sección...")
																				.DataTextField("Number")
																				.DataValueField("Id")
																				.DataSource(source =>
																				{
																					source.Read(read =>
																					{
																						read.Action("GetSectionsBySemester", "Sections")
																										.Data("filterSections");
																					})
																					.ServerFiltering(true);
																				})
																				.Value((ViewBag.SectionId != null) ? ViewBag.SectionId : "") 																		
																				.Enable(false)
																				.AutoBind(false)
																				.CascadeFrom("SemesterId")
							)
							@Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="hr-line-dashed"></div>

					<div class="form-group">
						@Html.LabelFor(model => model.FirstName, new { @class = "col-md-2 control-label" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "Nombre"}})
							@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="hr-line-dashed"></div>

					<div class="form-group">
						@Html.LabelFor(model => model.LastName, new { @class = "col-md-2 control-label" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Apellido" }})
							@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="hr-line-dashed"></div>

					<div class="form-group">
						@Html.LabelFor(model => model.IdCard, new { @class = "col-md-2 control-label" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.IdCard, new { htmlAttributes = new { @placeholder = "Cédula"} })
							@Html.ValidationMessageFor(model => model.IdCard, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="hr-line-dashed"></div>

					<div class="form-group">
						@Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
						<div class="col-md-10">
							@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @placeholder = "Email" }})
							@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
						</div>
					</div>
					<div class="hr-line-dashed"></div>

					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" class="btn btn-primary" value="Registrar" />
						</div>
					</div>
				}
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/bundles/Account/register")
}