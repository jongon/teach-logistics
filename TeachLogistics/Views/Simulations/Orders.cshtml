@model TeachLogistics.ViewModels.PeriodViewModel
@{
	ViewBag.Title = "Ordenes";
}
@section Styles{
	@Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
	@Styles.Render("~/plugins/toastrStyles")
	@Styles.Render("~/app/Simulations")
}
<div class="row wrapper border-bottom white-bg page-heading">
	<div class="col-sm-12">
		<h2>Modelo de Gestión</h2>
		<ol class="breadcrumb">
			@Html.DisplayFor(model => model.CaseStudy.Name)
		</ol>
		<span>
			<strong>Período: </strong>@Html.DisplayFor(model => model.WeekNumber) de @Html.DisplayFor(model => model.CaseStudy.Periods)
		</span>
		<h5>Progreso</h5>
		<div class="progress progress-striped">
			<div style="width:@(Math.Ceiling(((float)Model.WeekNumber / Model.CaseStudy.Periods) * 100 ))%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="35" role="progressbar" class="progress-bar progress-bar-success">
				<span class="sr-only">@(((float)Model.WeekNumber / Model.CaseStudy.Periods) * 100)% Completado (success)</span>
			</div>
		</div>
	</div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
	@Html.Flash()
	<div class="row">
		<div class="col-lg-12">
			<div class="ibox float-e-margins">
				<div class="ibox-content">
					<button id="animation-case-study" class="btn btn-success dim" data-placement="top" data-toggle="modal" data-target="#information" data-content="Haz click aquí para ver información del caso de estudio."><i class="fa fa-graduation-cap fa-lg"></i> Caso de Estudio</button>
					<button class="btn btn-primary dim" data-toggle="modal" data-target="#formulas"><i class="fa fa-calculator fa-lg"></i> Fórmulas</button>
					<button class="btn btn-warning dim" data-toggle="modal" data-target="#instructions"><i class="fa fa-info-circle fa-lg"></i> Instrucciones</button>
					<button id="demands" class="btn btn-default dim"><i class="fa fa-shopping-cart fa-lg"></i> Demandas</button>
					<button id="results" class="btn btn-danger dim"><i class="fa fa-table fa-lg"></i> Resultados</button>
					<button class="btn btn-info pull-right dim" id="animation-group" data-placement="top" data-content="Haz click aquí para ver los integrantes del grupo."><i class="fa fa-group	fa-lg"></i> Grupo</button>
				</div>
			</div>		
			@using (Html.BeginForm("MakeOrders", "Simulations", FormMethod.Post, new { @class = "", role = "form", id = "form" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })		
				@Html.HiddenFor(model => model.GroupId)
				@Html.HiddenFor(model => model.IsLastPeriod)					
				for (var i = 0; i < Model.Orders.Count(); i++)
				{
				<div class="ibox float-e-margins">
					<div class="ibox-title">
						<h5><i class="fa fa-shopping-cart fa-lg"></i> | @Html.DisplayFor(modelItem => Model.Orders[i].ProductName)</h5>
					</div>
					<div class="ibox-content">
						<div class="row">
							<div class="col-md-4 b-r">
								@Html.HiddenFor(modelItem => Model.Orders[i].ProductId)
								<dl class="dl-horizontal">
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].ProductNumber)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].ProductNumber)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].ProductPrice)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].ProductPrice)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].ReceivedOrders)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].ReceivedOrders)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].InitialStock)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].InitialStock)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].Demand)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].Demand)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].Sells)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].Sells)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].FinalStock)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].FinalStock)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].FinalStockCost)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].FinalStockCost)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].UnsatisfiedDemand)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].UnsatisfiedDemand)
									</dd>
									<dt>
										@Html.DisplayNameFor(modelItem => Model.Orders[i].UnsatisfiedDemandCost)
									</dt>
									<dd>
										@Html.DisplayFor(modelItem => Model.Orders[i].UnsatisfiedDemandCost)
									</dd>
								</dl>
							</div>
							<div class="col-md-8 form-horizontal order-panel">
								<div class="form-group">
									@Html.LabelFor(modelItem => Model.Orders[i].Quantity, new { @class = "control-label col-sm-3" })
									<div class="col-md-3">
										@Html.EditorFor(modelItem => Model.Orders[i].Quantity, new { htmlAttributes = new { @placeholder = "Cantidad", @Value = "", @class = "quantity-order" } })
										@Html.ValidationMessageFor(modelItem => Model.Orders[i].Quantity, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(modelItem => Model.Orders[i].OrderMethod, new { @class = "control-label col-sm-3" })
									<div class="col-sm-9">
										@foreach (var option in (SelectList)Model.Orders[i].OrderMethod)
										{
											<div class="radio i-checks">
												<label>
													@Html.RadioButtonFor(modelItem => Model.Orders[i].OrderMethodOption, option.Value)
													<i></i>@option.Text
												</label>
											</div>
										}
										@Html.ValidationMessageFor(modelItem => Model.Orders[i].OrderMethod, "", new { @class = "text-danger" })
									</div>
								</div>
								<p>
									Ordenes serán entregadas en el período: <span class="font-bold delivery"></span>
									<span id="weekDelivery" class="text-primary"><strong></strong></span>
								</p>
								<p>
									Costo de Total del pedido: <span class="font-bold total-cost"></span>
								</p>
								<div id="order_@i" class="costs" style="display:none">
									<input class="Price" type="hidden" value="@Model.Orders[i].ProductPrice" />
									<input class="OrdinaryOrderCost" type="hidden" value="@Model.Orders[i].OrderCostTime.OrdinaryOrderCost" />
									<input class="CourierOrderCost" type="hidden" value="@Model.Orders[i].OrderCostTime.CourierOrderCost" />
									<input class="FastOrderCost" type="hidden" value="@Model.Orders[i].OrderCostTime.FastOrderCost" />
									<input class="FastCourierCost" type="hidden" value="@Model.Orders[i].OrderCostTime.FastCourierCost" />
									<input class="OrdinaryOrderTime" type="hidden" value="@Model.Orders[i].OrderCostTime.OrdinaryOrderTime" />
									<input class="CourierOrderTime" type="hidden" value="@Model.Orders[i].OrderCostTime.CourierTime" />
									<input class="FastOrderTime" type="hidden" value="@Model.Orders[i].OrderCostTime.FastOrderTime" />
									<input class="FastCourierTime" type="hidden" value="@Model.Orders[i].OrderCostTime.FastCourierTime" />
								</div>
								<button type="button" data-toggle="modal" data-target="#orders" data-order="order_@i" class="btn btn-info dim order"><i class="fa fa-clock-o fa-lg"></i> Costos y tiempos</button>
							</div>
						</div>
					</div>
				</div>
				}
				<div class="row-wrapper wrapper wrapper-content">
					<div class="row">
						<div class="col-lg-12">
							<div class="ibox-content">
								<div class="form-group">
									<div class="col-md-12">
										@if (!Model.IsLastPeriod)
										{										
											<input type="submit" value="Ordenar" class="btn btn-primary dim" />
										}	
										else
										{
											<input type="submit" value="Ordenar" class="btn btn-primary dim" disabled/>									
										}																			
									</div>
								</div>
								<br />			
							</div>
						</div>
					</div>
				</div>
			}				
		</div>
	</div>
</div>
@{ Html.RenderPartial("_CaseStudyInformation", Model.CaseStudy); }
@{ Html.RenderPartial("_CaseStudyInstructions"); }
@{ Html.RenderPartial("_Formulas", Model.CaseStudy.Periods); }
@{ Html.RenderPartial("_OrderCosts"); }
@section Scripts {
	<script>
		var group = @Html.Raw(Json.Encode(Model.Members));
		var periodNumber = @Model.WeekNumber;
		var demandsUrl = "@Url.Action("Demands", new { Id = Model.Group.SectionId })";
		var resultsUrl = "@Url.Action("GroupResults", "Results")";
	</script>
	@Scripts.Render("~/plugins/iCheck")
	@Scripts.Render("~/plugins/toastr")
	<script src="~/Scripts/plugins/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML&locale=es"></script>	
	@Scripts.Render("~/bundles/Simulations/orders")
}